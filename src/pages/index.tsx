import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";

import { SignIn, SignedIn, SignedOut, SignInButton, SignOutButton, useUser } from "@clerk/nextjs";

import { RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {

  const { user } = useUser();

  console.log(user);

  if (!user) return null;


  return (
    <div className="flex gap-3 w-full">
      <Image src={user.profileImageUrl} alt="Profile image" className="w-14 h-14 rounded-full" width={56} height={56} />
      <input placeholder="Enter text" className="bg-transparent grow outline-none" />
    </div>
  )
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div key={post.id} className="p-4 border-b border-slate-400 flex gap-3">
      <Image src={author.profileImageUrl} className="w-14 h-14 rounded-full" alt={`@${author.username}' profile picture`} width={56} height={56}  />
      <div className="flex flex-col">
        <div className="flex gap-1 text-slate-300">
          <span className="font-bold">{`@${author.username}`}</span>Â·
          <span className="font-thin">{`${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span>{post.content}</span>
      </div>
    </div>
  )
}

const Home: NextPage = (props) => {
  const { data, isLoading } = api.posts.getAll.useQuery();

  if (isLoading) return <div>Loading...</div>

  if (!data) return <div>Something went wrong</div>

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="h-full w-full border-slate-400 md:max-w-2xl border-x">
          <div className="border-b border-slate-400 p-4">
            <div className="flex justify-center">
              <SignedIn>
                {/* Mount the UserButton component */}
                <CreatePostWizard />
                <SignOutButton />
              </SignedIn>
            </div>
            <SignedOut>
              {/* Signed out users get sign in button */}
              <SignInButton />
            </SignedOut>
          </div>
          <div className="flex flex-col">
            {[...data, ...data]?.map((fullPost) => (
              <PostView {...fullPost} key={fullPost.post.id} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
